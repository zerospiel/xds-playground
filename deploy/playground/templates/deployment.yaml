apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.appName }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.appName }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}
        {{- include "common_labels" $ | indent 8 }}
    spec:
      dnsConfig:
        options:
        - name: ndots
          value: "1"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    release: {{ .Values.appName }}
      enableServiceLinks: {{ .Values.enableServiceLinks }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      serviceAccountName: {{.Values.appName }}
      containers:
        - name: {{.Values.appName }}
          image: {{ .Values.image }}:{{ .Values.tag }}
          imagePullPolicy: {{ .Values.pullPolicy }}
          args:
{{ toYaml .Values.args | indent 12 }}
          ports:
            {{ if not (empty .Values.service) }}
            {{ range .Values.service.ports }}
            - name: {{ .name }}
              containerPort: {{ .port }}
              protocol: TCP
            {{ end }}
            {{ end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          {{ if .Values.client }}
          volumeMounts:
            - mountPath: /var/run/config
              name: client-config
          {{ end }}
      {{ if .Values.client }}
      volumes:
        - name: client-config
          configMap:
            name: client-config
      {{ end }}
